---
  - name: Provision an ubuntu instance
    hosts: local
    connection: local
    gather_facts: local
    tags: provisioning
    vars:
      instance_type: t2.micro
      security_group: ansible-mysql
      image: ami-43a15f3e
      keypair: ansible-mysql
      region: us-east-1
      zone1: us-east-1a
      zone2: us-east-1b
      zone3: us-east-1c 
      count: 3
      application: mysql
    tasks:
      - name: create a security group
        local_action:
          module: ec2_group
          name: "{{security_group}}"
          description: Security Group for mysql Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 3306
              to_port: 3306
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the first EC2 Instance
        local_action: ec2
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }}
                      wait=true
                      region={{ region }} 
                      zone={{ zone1 }} 
                      keypair={{ keypair }}
        register: ec2
      - name: tag my launched instances
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: '{{ ec2.instances }}'
        args:
          tags:
            Name: mysql
            env: cluster
      - name: Launch the second EC2 Instance
        local_action: ec2
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true
                      region={{ region }} 
                      zone={{ zone2 }} 
                      keypair={{ keypair }}
        register: ec2
      - name: tag my launched instances
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: '{{ ec2.instances }}'
        args:
          tags:
            Name: mysql
            env: cluster
      - name: Launch the third EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true
                      region={{ region }} 
                      zone={{ zone3 }} 
                      keypair={{ keypair }}
        register: ec2
      - name: tag my launched instances
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: '{{ ec2.instances }}'
        args:
          tags:
            Name: mysql
            env: cluster
#      - debug: msg="{{ ec2.instances }}"
      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }}
                      insertafter="[mysql]" line={{ item.public_ip }}
        with_items: '{{ ec2.instances }}'
        
#      - name: Wait for servers to come online
 #       wait_for:
  #        host: "{{ item.public_ip }}"
   #       port: 22
    #      timeout: 360
     #   with_items: '{{ ec2.tagged_instances }}'

      - name: Add EC2 instances as known hosts
        known_hosts:
          name: "{{ item.public_ip }}"
          key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + item.public_ip) }}"
        with_items: '{{ ec2.instances }}'


      - name: Create the ELB only listening over port 3306
        ec2_elb_lb:
          name: mysql-load-balancer
          state: present
          region: "{{ region }}"
          zones:
            - us-east-1a
            - us-east-1b
            - us-east-1c
          listeners:
            - protocol: tcp
              load_balancer_port: 3306
              instance_port: 3306
        register: elb
      - include: mysql-installation.yml	
      - name: Add each EC2 instance to the ELB
        ec2_elb:
          state: present
          ec2_elbs: mysql-load-balancer
          region: us-east-1
          instance_id: "{{ item.id }}"
        with_items: '{{ ec2.instances }}'


       
